<!DOCTYPE html>
<html lang="en">
<head>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Topic Posts</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="../public/css/custom.css">
  <link rel="stylesheet" href="../public/css/dashboard.css">
</head>
<body>
  <div class="theme-switcher">
    <i class="fas fa-sun"></i>
  </div>
        <div class="d-flex align-items-center mb-4 border-bottom pb-2">
          <i class="fas fa-comments fa-2x me-3 text-primary"></i>
          <h2 class="mb-0" id="topic-title"></h2>
        </div>
        <div id="posts-list" class="mb-4">
          <!-- Posts will be loaded here -->
        </div>
        <div class="card shadow-sm mt-4">
          <div class="card-header bg-primary text-white">
            <h3 class="mb-0">Add New Post</h3>
          </div>
          <div class="card-body">
            <div class="mb-3">
              <textarea id="new-post-content" class="form-control" placeholder="Your post content" rows="5"></textarea>
            </div>
            <button id="create-post-btn" class="btn btn-primary">Add Post</button>
          </div>
        </div>
  <script>
    document.addEventListener('DOMContentLoaded', async () => {
      const urlParams = new URLSearchParams(window.location.search);
      const topicId = urlParams.get('topicId');
      const topicTitle = urlParams.get('topicTitle');
      if (topicTitle) {
        document.getElementById('topic-title').textContent = topicTitle;
      }
      const fetchPosts = async () => {
        try {
          const response = await Promise.race([fetch(`/api/forums/forum/topics/${topicId}/posts`, { signal: AbortSignal.timeout(10000) }), new Promise((_, reject) => setTimeout(() => reject(new Error("Timeout")), 10000))]);
          const posts = await response.json();
          const postsList = document.getElementById('posts-list');
          postsList.innerHTML = ''; // Clear previous posts
          if (posts.length === 0) {
            postsList.innerHTML = '<p>No posts in this topic yet. Be the first to post!</p>';
            return;
          }
          posts.forEach(post => {
            const postCard = document.createElement('div');
            postCard.className = 'card mb-2'; // Using Bootstrap card style
            postCard.innerHTML = `
              <div class="card-body">
                <p class="card-text">${post.content}</p>
                <small class="text-muted">Posted by: ${post.user_type} (ID: ${post.user_id}) on ${new Date(post.created_at).toLocaleDateString()}</small>
              </div>
            `;
            postsList.appendChild(postCard);
          });
        } catch (error) {
          console.error('Error fetching posts:', error);
          document.getElementById('posts-list').innerHTML = '<p>Error loading posts. Please try again later.</p>';
        }
      };
      document.getElementById('create-post-btn').addEventListener('click', async () => {
        const content = document.getElementById('new-post-content').value;
        const userId = localStorage.getItem('userId') || 1; // Placeholder: Replace with actual user ID
        const userType = localStorage.getItem('userType') || 'student'; // Placeholder: Replace with actual user type
        if (content.trim() === '') {
          alert('Post content cannot be empty.');
          return;
        }
        try {
          const response = await Promise.race([fetch(`/api/forums/forum/topics/${topicId}/posts`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ userId, userType, content }, { signal: AbortSignal.timeout(10000) }), new Promise((_, reject) => setTimeout(() => reject(new Error("Timeout")), 10000))]),
          });
          const result = await response.json();
          if (response.ok) {
            alert(result.message);
            document.getElementById('new-post-content').value = '';
            fetchPosts(); // Refresh posts list
          } else {
            alert(`Error: ${result.error}`);
          }
        } catch (error) {
          console.error('Error creating post:', error);
          alert('Failed to create post.');
        }
      });
      fetchPosts(); // Initial fetch
    });
  </script>
  <script src="../public/js/sidebar-fix.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>